# This config is formated in a way parsable by python's configparse built-in lib
# here in this example are *all* the possible settings listed:

# General settings
[general]

# The SECRET_KEY varaible used by flask.
SECRET_KEY = ZAQ!2wsx

# (Optional) SHA-256 hash of the password for the admin access. if not provided, the SECRET_KEY is used as the admin password
;admin_passhash = 57311420097d5e12e3812d5795459ac5458272ab511d9db14f0ae18f25c9ea7a

# (Optional) An email address to display on the page as the one people can use to contact with the service provider.
;contact_mail = az.buky@example.com

# (Optional) If you have a forked repo of this project (because you for example modified the sourcecode of the webapp for your own needs), you can provide the URL here (don't forget to add http:// at the beginning!)
;repourl = https://github.com/azbukyvede/linux-lingo

# (Optional) Provide a full URL for your bugtracker (either the issue catalogue or "Submit an Issue" page).
# If not provided, it WILL assume, that the `repourl` points to a repo hosted on GITHUB and make a bugtracker url out of it.
;bugtracker = https://bugzilla.kernel.org/enter_bug.cgi

# NOTE: the above example is just a showcase of what is `bugtracker` option supposed to look like. DON'T EVEN THINK ABOUT actually using Linux Kernel's bugtracker as your own!

[mongodb]
# here we configure how to connect to the mongoDB Database.

# if we use a Mongo Atlas database or in general you want to have a more fine-grained control over the URL,
# you can provide the whole mongodb:// url:
;url = mongodb://example.com/db

# otherwise, you can provide parameters separately and the mongodb:// url will be created for you.
# `db` parameter is the only mandatory parameter.
;login = az
;password = ZAQ!2wsx
;ip = example.com
;port = 1984
db=linux